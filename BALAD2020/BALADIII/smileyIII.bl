#!/usr/bin/baladIII
########################################################################
#
#  Draw a SMILEY in character graphics
#
#  This program shows that apart from doing arithemetic (crunching numbers)
#  and processing text, it is also possible to do a rudimentary form of
#  pixel processing with this instruction set - albeit with character graphics.
#
#  $Id: smileyIII.bl 1.1 $
#
########################################################################

	LOC 20
demoMs:	"       A SMILEY from BALAD for your enjoyment\n"
space:	"."
hash:	"#"
nl:	"\n"
nl4sp:	"\n    "

fstpic:	ADR piclst		; start of picture list
linlen:	24			; number of lines per picture
wrdlen:	3			; number of words per line
bitlen:	15			; number of bits per word
piclst:	ADR smiley		; picture list
	0			; terminator for picture list
picptr:	0
wrdptr:	0
lincnt:	0
wrdcnt:	0
bitcnt:	0

	LOC 1000
main:	PRF demoMs		; show introductory demo message
	LDA fstpic		; start of picture list
	STA picptr		; points to individual pictures
piclp:	LDA @picptr		; next picture pointer
	JZR halt		; picture list terminated
	INC picptr
	STA wrdptr		; start of words in a picture
	LDA linlen		; number of lines per picture
	STA lincnt
linlp:	PRF nl4sp		; "\nl    " next line
	LDA wrdlen		; number of words per line
	STA wrdcnt
wrdlp:	LDA bitlen		; number of pixels per word
	STA bitcnt
	LDA @wrdptr		; next word in picture
	INC wrdptr
bitlp:	ROL ACC			; next bit in word
	JNC hasho
	PCH space		; "." output a space
	JMP .+2
hasho:	PCH hash		; "#" output a hash
	DEC bitcnt		; count bits
	JNR bitlp		; next bit
	DEC wrdcnt		; count words
	JNR wrdlp		; next word
	DEC lincnt		; count lines
	JNR linlp		; next line
	PCH nl			; "\nl" at end of picture
	JMP piclp		; next picture
halt:	PCH nl			; "\nl" at end of program
	HLT

	LOC 2000		; pixel data

smiley:	0b0000000000000000	; ".................11111111111................."
	0b0011111111111000	; "...........11111111111111111111111..........."
	0b0000000000000000	; "........111111111...........111111111........"
                         	; "......1111111...................1111111......"
	0b0000000000011110	; "....111111.........................111111...."
	0b1111111111111110	; "...1111...............................1111..."
	0b1111000000000000	; "..111...................................111.."
                         	; ".111......11.....................11......111."
	0b0000000011111110	; "111......1111...................1111......111"
	0b1100000000000110	; "111.....111111.................111111.....111"
	0b1111111000000000	; "11......111111.................111111......11"
                         	; "11.......1111...................1111.......11"
	0b0000001111111000	; "11.........................................11"
	0b0000000000000000	; "11......11.........................11......11"
	0b0011111110000000	; "111....1111.......................1111....111"
                         	; "111...11..1111.................1111..11...111"
	0b0000111111000000	; ".111.......11111111.......11111111.......111."
	0b0000000000000000	; "..111..........111111111111111..........111.."
	0b0000011111100000	; "...1111..............111..............1111..."
                         	; "....111111.........................111111...."
	0b0001111000000000	; "......1111111...................1111111......"
	0b0000000000000000	; "........111111111...........111111111........"
	0b0000000011110000	; "...........11111111111111111111111..........."
                         	; ".................11111111111................."
	0b0011100000000000
	0b0000000000000000
	0b0000000000111000

	0b0111000000110000
	0b0000000000000000
	0b0001100000011100

	0b1110000001111000
	0b0000000000000000
	0b0011110000001110

	0b1110000011111100
	0b0000000000000000
	0b0111111000001110

	0b1100000011111100
	0b0000000000000000
	0b0111111000000110

	0b1100000001111000
	0b0000000000000000
	0b0011110000000110

	0b1100000000000000
	0b0000000000000000
	0b0000000000000110

	0b1100000011000000
	0b0000000000000000
	0b0000011000000110

	0b1110000111100000
	0b0000000000000000
	0b0000111100001110

	0b1110001100111100
	0b0000000000000000
	0b0111100110001110

	0b0111000000011110
	0b1111000000011110
	0b1111000000011100

	0b0011100000000000
	0b1111111111111110
	0b0000000000111000

	0b0001111000000000
	0b0000001110000000
	0b0000000011110000

	0b0000111111000000
	0b0000000000000000
	0b0000011111100000

	0b0000001111111000
	0b0000000000000000
	0b0011111110000000

	0b0000000011111110
	0b1100000000000110
	0b1111111000000000

	0b0000000000011110
	0b1111111111111110
	0b1111000000000000

	0b0000000000000000
	0b0011111111111000
	0b0000000000000000
